Genie

PURPOS:
  # Combine, Minify and Cache both local and remote static js/css files.

BENEFITS:
  # Compress all the data and Gzip for less bandwidth.
  # Reduce the number of http requests. (Both browser and server-side)
  # Reduce the number of Dns lookups. (Fetch and Cache remote files server-side)
  # Optimize browser and cdn caching.

USAGE:
  # Include the genie.class.php file.
  # Create a new genie instance.
    > Provide a unique name for the output.
    > Provide the content type. (js/css)
    > Provide the debug setting. (true/false defualts to false)
  # Add files to the list.
  # Run the process.

EXAMPLE:
  $genie = new Genie( 'cache-file.js' , 'js' , false );
  $genie->addFile( 'path or url to file 1' );
  $genie->addFile( 'path or url to file 2' );
  $genie->addFile( 'path or url to file 3' );
  $genie->grandWish();

PROCESS:
- Check if the debug mode is false.
  - if so, Check if a cache-file already exist.
    - if so, check to see if it has been made within the past 24 hours.
      - if so, return the contents of the cache-file.

- If not and one of the test fails.
  - loop through all the files, and grab there name, size and content.
    - If a file is a remote file (requested over http/https).
      - Sanitize the filename.
      - Check if we already made a local copy that is less then a week old.
        - If not, create or update a local version.

    - If a file is local, grab its content.

  - Minify all the data using a js or css minify method.
  - If requested add profile information in the form of comments.
  - Check to see if the cache-file already exist.
    - If not, create it.
  - write all the compressed data to the cache-file and save/close it.
  - Touch the file, so we can check for its last altered date later.
  - Send the apropriate headers for js or css.
  - Send the data to the browser.
  - Send the genie back to its bottle destroy the class instance.


OUTPUT PROFILE:
  - Number of reduced http requests.
  - Number of cached remote files.
  - Number of kb's reduced.
    - Size of all files combined.
    - Size of the cache file.
  - Time to compile the files.
  - Included files.
  - names of cached remote files.
  - name of the cache file.
